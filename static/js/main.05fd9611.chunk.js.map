{"version":3,"sources":["components/styles/content.module.scss","components/styles/modal.module.scss","components/images/icons/proximate-side-white.png","components/modal/modal.jsx","components/map/map.jsx","components/wikiarray/wikiarray.jsx","components/start/startscreen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","context","setContext","useEffect","current","className","Style","container","Provider","value","ref","Modal","onClose","props","modalNode","useContext","ReactDOM","createPortal","overlay","dialog","icon","faWindowClose","onClick","MapComponent","console","log","pos1","myPos","pos2","targetPos","lat1","lat","lon1","lon","lat2","lon2","location1","myLocation","location2","targetLocation","MarkerIcon","L","iconUrl","shadowUrl","iconShadow","iconAnchor","shadowSize","shadowAnchor","deg2rad","deg","Math","PI","Marker","prototype","options","distance","round","_lat1","_lon1","_lat2","_lon2","dLat","dLon","a","sin","cos","atan2","sqrt","getDistanceFromLatLonInKm","Map","center","zoom","TileLayer","url","attribution","position","Tooltip","permanent","Popup","Polyline","key","positions","color","weight","WikiArray","wikiArr","active","setActive","isModalOpen","setIsModalOpen","modalData","setModalData","setTargetPos","myLat","myLon","area","road","city","suburb","ChangeSlide","num","length","modalMap","title","fetch","req","json","res","posData","Object","entries","fposData","pages","coordinates","modalFetch","id","data","fData","mData","extract","apiData","query","reduce","acc","item","thumbnail","width","push","contentContainer","pageid","style","backgroundImage","source","contentNavigator","contentHeading","iconContainer","modalMsg","about","aboutContainer","aboutHeading","aboutContent","aboutList","href","modalAbout","iconRound","faStar","faCompass","faBars","content","faUndo","linkContainer","aLinkLeft","aLink","curser","cycleContainer","iconRoundLeft","faArrowLeft","iconRoundRight","faArrowRight","StartScreen","topSection","topNav","mainLogo","alt","src","logoSideWhite","topIcons","range","bottomSection","onChange","stateChange","bottomRange","type","min","max","labelContainer","labelLeft","labelRight","fetchAll","bottomButton","App","long","setRange","setApiData","setArea","setLat","setLon","fetchGeoData","geoURL","georeq","geores","areaData","address","fetchApiData","undefined","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","_Lon","error","event","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05fd9611.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topSection\":\"content_topSection__1HDm7\",\"topNav\":\"content_topNav__qZBKs\",\"contentContainer\":\"content_contentContainer__2MRzX\",\"contentHeading\":\"content_contentHeading__lIt-u\",\"aLink\":\"content_aLink__3G1ik\",\"aLinkLeft\":\"content_aLinkLeft__ymbvd\",\"iconRound\":\"content_iconRound__2YTJw\",\"iconContainer\":\"content_iconContainer__35sDu\",\"icon\":\"content_icon__2zkkj\",\"cycleContainer\":\"content_cycleContainer__y_N1P\",\"iconRoundLeft\":\"content_iconRoundLeft__1QVht\",\"iconRoundRight\":\"content_iconRoundRight__2Smr9\",\"modal\":\"content_modal__NS969\",\"labelLeft\":\"content_labelLeft__13qWl\",\"labelRight\":\"content_labelRight__2dPRu\",\"bottomSection\":\"content_bottomSection__1hQKw\",\"bottomRange\":\"content_bottomRange__36hxO\",\"bottomButton\":\"content_bottomButton__30Cqf\",\"mainLogo\":\"content_mainLogo__3XNOU\",\"aboutContainer\":\"content_aboutContainer__3OXGE\",\"aboutHeading\":\"content_aboutHeading__1o71u\",\"aboutContent\":\"content_aboutContent__2NDOf\",\"aboutList\":\"content_aboutList__2qJ8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__2qZdF\",\"overlay\":\"modal_overlay__18yj7\",\"fadeIn\":\"modal_fadeIn__1UCin\",\"dialog\":\"modal_dialog__28t_i\",\"movein\":\"modal_movein__PraGP\",\"icon\":\"modal_icon__1tHuv\",\"fadein\":\"modal_fadein__2P2iF\"};","module.exports = __webpack_public_path__ + \"static/media/proximate-side-white.c26aa9a9.png\";","import React, { useRef, useContext, useState, useEffect } from \"react\";\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport ReactDOM from \"react-dom\";\nimport Style from '../styles/modal.module.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ModalContext = React.createContext();\n\n// Modal provider. Accepts children as props\nexport function ModalProvider({ children }) {\n  // Set reference\n  const modalRef = useRef();\n  const [context, setContext] = useState();\n\n  // make sure re-render is triggered after initial\n  // render so that modalRef exists\n  useEffect(() => {\n    setContext(modalRef.current);\n  }, []);\n\n // return context provider with value context and children as child.\n  return (\n    <div className={Style.container}>\n      <ModalContext.Provider value={context}>{children}</ModalContext.Provider>\n      <div ref={modalRef} />\n    </div>\n  );\n}\n\n// The modal, accepts onClose function, children optional props\n// React portal element\nexport function Modal({ onClose, children, ...props }) {\n  const modalNode = useContext(ModalContext);\n\n  return modalNode\n    ? ReactDOM.createPortal(\n        <div className={Style.overlay}>\n          <div className={Style.dialog} {...props}>\n            <FontAwesomeIcon className={Style.icon} icon={faWindowClose} onClick={onClose}></FontAwesomeIcon>\n            {children}\n          </div>\n        </div>,\n        modalNode\n      )\n    : null;\n}\n","import React from 'react'\nimport { Map, Marker, Popup, TileLayer, Polyline, Tooltip } from 'react-leaflet'\n\n// import leaflet and styles\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/leafletStyles.scss';\n\n//Import icons for leaflet\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nfunction MapComponent(props) {\n\n    console.log(props);\n\n    // Set all coordinates\n    const pos1 = props.myPos;\n    const pos2 = props.targetPos;\n\n    const lat1 = pos1.lat;\n    const lon1 = pos1.lon;\n\n    const lat2 = pos2.lat;\n    const lon2 = pos2.lon;\n\n    const location1 = props.myLocation;\n    const location2 = props.targetLocation;\n\n\n\n    // Set icon options\n    let MarkerIcon = L.icon({\n        iconUrl: icon,\n        shadowUrl: iconShadow,\n        iconAnchor: [12, 40],\n        shadowSize: [28, 55],\n        shadowAnchor: [10, 50]\n    });\n\n    L.Marker.prototype.options.icon = MarkerIcon;\n\n    // Distance from coordinates calculation from:\n    // https://stackoverflow.com/questions/18883601/function-to-calculate-distance-between-two-coordinates\n    function getDistanceFromLatLonInKm(_lat1, _lon1, _lat2, _lon2) {\n        var R = 6371; // Radius of the earth in km\n        var dLat = deg2rad(_lat2 - _lat1);  // deg2rad below\n        var dLon = deg2rad(_lon2 - _lon1);\n        var a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(deg2rad(_lat1)) * Math.cos(deg2rad(_lat2)) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n            ;\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = R * c; // Distance in km\n        return d;\n    }\n    function deg2rad(deg) {\n        return deg * (Math.PI / 180)\n    }\n\n    // Get distance between points\n    let distance = Math.round(getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2))\n\n    // Create map with react-leaflet\n    const map = (\n        <Map center={pos1} zoom={13}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            <Marker position={pos1}>\n                <Tooltip permanent={true}>{location1}</Tooltip>\n                <Popup>From {location1} to {location2} there are roughly {distance} km </Popup>\n            </Marker>\n            <Marker position={pos2}>\n                <Tooltip permanent={true}>{location2}</Tooltip>\n                <Popup>From {location2} to {location1} there are roughly {distance} km</Popup>\n            </Marker>\n            <Polyline key={\"polyline\"} positions={[[lat1, lon1], [lat2, lon2],]} color={'green'} weight={'3'} />\n        </Map>\n    )\n\n    return (map)\n}\n\n\nexport default MapComponent;","import React, {useState} from 'react';\nimport {ModalProvider, Modal} from '../modal/modal';\nimport Style from '../styles/content.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar, faCompass } from '@fortawesome/free-regular-svg-icons'\nimport { faBars, faUndo, faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport { Markup } from 'interweave';\nimport MapComponent from '../map/map';\n\n// Creates and returns the wikipedia articles \nfunction WikiArray(props) {\n    console.log(props);\n    let wikiArr = [];\n\n    // Set states\n    const [active, setActive] = useState(0);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalData, setModalData] = useState();\n    const [targetPos, setTargetPos] = useState();\n\n    // Variables needed for map component\n    const myLat = props.myLat;\n    const myLon = props.myLon;\n    const myPos = {lat:myLat, lon:myLon};\n    const myLocation = props.area.road + \" - \" + props.area.city + \", \" + props.area.suburb;\n    \n    // Function to change the current article\n    function ChangeSlide(num) {\n        if (num === -1) {\n            if (active === 0) {\n                console.log(\"Reached the bottom\")\n            }\n            else {\n                setActive(active + num)\n            }\n        }\n        if (num === 1) {\n            if (active < wikiArr.length - 1) {\n                setActive(active + num)\n            }\n            else {\n                console.log(\"Reached the top\")\n            }\n        }\n    }\n\n    // Function to fetch the current articles gps location\n    const modalMap = async(title) => {\n        let url = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=coordinates&format=json&titles=${title}`\n        try {\n                const req = await fetch(url);\n                const res = await req.json();\n                const posData = Object.entries(res);\n                const fposData = Object.entries(posData[1][1].pages);\n                let lat = fposData[\"0\"][1].coordinates[\"0\"].lat;\n                let lon = fposData[\"0\"][1].coordinates[\"0\"].lon;\n                let targetPos = {lat: lat, lon: lon};\n                setTargetPos(targetPos)\n                console.log(fposData);\n        } catch (error) {\n            console.log(error);\n        }\n\n        setModalData(<MapComponent></MapComponent>);\n        setIsModalOpen(true);\n    }\n\n    // Function to fetch the current articles exempt from wikipedia\n    const modalFetch = async(id) => {\n        \n        const url = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=extracts&format=json&exintro=&pageids=${id}`\n\n        try {\n            const req = await fetch(url);\n            const res = await req.json();\n            const data = Object.entries(res);\n            const fData = Object.entries(data[2][1].pages)\n            const mData = {\n               extract: fData['0'][1].extract,\n               title: fData['0'][1].title\n            }\n            setModalData(mData);\n            setIsModalOpen(true) \n        }\n        \n        catch (error) {\n            console.log(error)\n        }\n        \n    }\n\n    // Function to return about section, used as a child of modal\n    const modalAbout = () => {\n\n        const modalMsg = {\n                        about: \n                        <div className={Style.aboutContainer}>\n                            <h3 className={Style.aboutHeading}>About</h3>\n                            <p>Proximate can help you find nearby points of interest, within a 10 km range. Browse through high quality images of all the places near you, and when something peaks your interest, you can get a quick exempt of the place or go straight to the wikipedia site for more info</p>\n                            <p className={Style.aboutContent}>This app would not have been possible without all the awesome work made by:</p>\n                            <div className={Style.aboutContent}>\n                                <ul>\n                                    <li className={Style.aboutList}>Nominatim: <a href=\"http://nominatim.org/\">http://nominatim.org/</a></li>\n                                    <li className={Style.aboutList}>Wikidata: <a href=\"https://www.wikidata.org/wiki/Wikidata:Main_Page\">https://www.wikidata.org/</a></li>\n                                    <li className={Style.aboutList}>OpenStreetMap: <a href=\"https://www.openstreetmap.org/copyright\">https://www.openstreetmap.org/</a></li>\n                                    <li className={Style.aboutList}>React-leaflet: <a href=\"https://react-leaflet.js.org/\" >https://react-leaflet.js.org/</a></li>\n                                    <li className={Style.aboutList}>Leaflet: <a href=\"https://leafletjs.com/\" >https://leafletjs.com/</a></li>\n                                    <li className={Style.aboutList}>FontAwesome: <a href=\"https://fontawesome.com/\" >https://fontawesome.com/</a></li>\n                                </ul>\n                            </div>\n                        </div>,}\n\n        setModalData(modalMsg);\n        setIsModalOpen(true);\n    }\n\n    // If the fetch was successfull, loop through all data, create each page with content, and insert it into an array. \n    if (props.apiData && props.apiData.query && props.apiData.query.pages) {\n       wikiArr = Object.entries(props.apiData.query.pages).reduce((acc, item) => {\n            if (item[1].thumbnail) {\n                if (item[1].thumbnail.width >= 2000) {\n                    acc.push(\n                        <ModalProvider>\n                        <div className={Style.contentContainer} key={item[1].pageid} style={{ backgroundImage: `url( ${item[1].thumbnail.source})` }}>\n                            <div className={Style.contentNavigator}>\n                                <h2 className={Style.contentHeading}> {item[1].title} </h2>\n                                <div className={Style.iconContainer}>\n                                    <div onClick={() => modalAbout()} className={Style.iconRound}><FontAwesomeIcon className={Style.icon} icon={faStar} /></div>\n                                    <div onClick={() => modalMap(item[1].title)}  className={Style.iconRound}><FontAwesomeIcon className={Style.icon} icon={faCompass} /></div>\n                                    <div onClick={() => modalFetch(item[1].pageid)} className={Style.iconRound}>\n                                    <FontAwesomeIcon className={Style.icon} icon={faBars} />\n                                    </div>\n                                        {modalData && isModalOpen && \n                                        (<Modal onClose={() => setIsModalOpen(false)}> \n                                        {!modalData.about && !modalData.extract &&<div><p>From: {myLocation},<br></br> To: {item[1].title}</p><MapComponent myPos={myPos} targetPos={targetPos} myLocation={myLocation} targetLocation={item[1].title}></MapComponent></div>}\n                                        {!modalData.about && modalData.extract && <Markup content={modalData.extract}></Markup>}\n                                        {modalData.about}\n                                        </Modal>)\n                                        }\n                                    <a href=\"/react-proximate\" className={Style.iconRound}><FontAwesomeIcon className={Style.icon} icon={faUndo} /></a>\n                                </div>\n                                <div className={Style.linkContainer}>\n                                    <a key={item[1].pageid+1} className={Style.aLinkLeft} href={\"http://en.wikipedia.org/?curid=\" + item[1].pageid}>Read more |</a>\n                                    <p key={item[1].pageid+2}className={Style.aLink} onClick={() => modalMap(item[1].title)} curser=\"pointer\"> Get directions</p>\n                                </div>\n                                <div className={Style.cycleContainer}>\n                                <div onClick={() => ChangeSlide(-1)} className={Style.iconRoundLeft}><FontAwesomeIcon className={Style.icon} icon={faArrowLeft} /></div>\n                                <div onClick={() => ChangeSlide(+1)} className={Style.iconRoundRight}><FontAwesomeIcon className={Style.icon} icon={faArrowRight} /></div>\n                                </div>\n                            </div>\n                        </div>\n                    </ModalProvider>\n                    )\n                }\n            }\n            return acc;\n        }, [])\n        return wikiArr[active];\n    }\n    else{\n        return(\n            <div><h2>Sorry.. No points of interest were found around you. \n                </h2><p>This app uses Wikidata to get content. If you think something important or interesting is going on around you and it is not already on Wikipedia, consider adding it as an article to Wikipedia yourself.</p></div>\n        )\n    }\n}\n\nexport default WikiArray;","import React from 'react';\nimport Style from '../styles/content.module.scss';\n\nimport logoSideWhite from '../images/icons/proximate-side-white.png';\n\n// The default start screen\nexport function StartScreen(props){\n    \n    // return this if fetch for location was successful\n    if (props.area){\n    return (\n        <>\n        <section className={Style.topSection}>\n            <nav className={Style.topNav}>\n                <img className={Style.mainLogo} alt=\"white-proxmate-logo\" src={logoSideWhite} />\n                <div className={Style.topIcons}>\n                </div>\n            </nav>\n            <h2>{props.area.city}</h2>\n            <h4>Within {props.range} km of you is</h4>\n        </section>\n\n        <form className={Style.bottomSection}>\n            <input onChange={props.stateChange} value={props.range} id=\"rangeSlider\" className={Style.bottomRange} type=\"range\" min=\"1\" max=\"10\"></input>\n            <div className={Style.labelContainer}>\n                <label className={Style.labelLeft}>1 Km</label>\n                <label className={Style.labelRight}>10 Km</label>\n            </div>\n            <button onClick={props.fetchAll} className={Style.bottomButton} value=\"Search\" type=\"button\">Search</button>\n        </form>\n        </>\n    )\n}\n\n// Else return this version without city name\nelse{\n    return(\n        <>\n        <section className={Style.topSection}>\n            <nav className={Style.topNav}>\n            <img className={Style.mainLogo} alt=\"white-proxmate-logo\" src={logoSideWhite} />\n                <div className={Style.topIcons}>\n                </div>\n            </nav>\n            <h4>Within {props.range} km of you is</h4>\n        </section>\n\n        <form className={Style.bottomSection}>\n            <input onChange={props.stateChange} value={props.range} id=\"rangeSlider\" className={Style.bottomRange} type=\"range\" min=\"1\" max=\"10\"></input>\n            <div className={Style.labelContainer}>\n                <label className={Style.labelLeft}>1 Km</label>\n                <label className={Style.labelRight}>10 Km</label>\n            </div>\n            <button onClick={props.fetchAll} className={Style.bottomButton} value=\"Search\" type=\"button\">Search</button>\n        </form>\n        </>\n    )\n}\n}\n\nexport default StartScreen;","import React, { useState } from \"react\";\nimport './App.css';\n\nimport WikiArray from './components/wikiarray/wikiarray';\nimport StartScreen from './components/start/startscreen';\n\nfunction App() {\n\n  let long = null;\n  let lat = null;\n\n  const [range, setRange] = useState(10)\n  const [apiData, setApiData] = useState(null)\n  const [area, setArea] = useState(null);\n\n  const [myLat, setLat] = useState(null);\n  const [myLon, setLon] = useState(null);\n\n\n  const stateChange = (event) => {\n    setRange(event.target.value);\n    console.log(range);\n  }\n\n  const fetchAll = () => {\n    fetchApiData();\n  }\n\n  const getLocation = () => {\n    const success = (pos) => {\n      let position = pos.coords;\n      lat = position.latitude;\n      long = position.longitude;\n      console.log(\"lat is \" + lat + \"long is \" + long);\n      let _Lat = lat;\n      let _Lon = long;\n      setLat(_Lat);\n      setLon(_Lon)\n      fetchGeoData();\n    }\n\n    const error = (error) => {\n      console.log(error);\n    }\n\n    navigator.geolocation.getCurrentPosition(success, error);\n\n    return (\n      long,\n      lat\n    )\n  }\n\n  const fetchGeoData = async () => {\n    // http://nominatim.org/release-docs/latest/api/Overview/\n    let geoURL = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${long}&format=json`;\n\n    try {\n      const georeq = await fetch(geoURL);\n      const geores = await georeq.json();\n      let areaData = {city: geores.address.city, suburb: geores.address.suburb, road: geores.address.road}\n      await setArea(areaData);\n      console.log(geores);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const fetchApiData = async () => {\n    let url = `https://en.wikipedia.org/w/api.php?&format=json&origin=*&action=query&generator=geosearch&prop=coordinates|pageimages&piprop=thumbnail&pithumbsize=2000&ggscoord=${myLat}|${myLon}&ggsradius=${range * 1000}&ggslimit=50`;\n\n    try {\n      const req = await fetch(url);\n      const res = await req.json();\n      setApiData(res);\n    }\n\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  if (myLat === null || myLat === undefined || myLat === \"\") {\n    getLocation();\n  }\n\n  if (apiData === null || apiData === undefined) {\n    return (\n      <StartScreen area={area} stateChange={stateChange} range={range} fetchAll={fetchAll} />\n    )\n  }\n  else {\n    return (\n      <WikiArray apiData={apiData} area={area} myLon={myLon} myLat={myLat} />\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}